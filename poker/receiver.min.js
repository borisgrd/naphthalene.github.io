var Button,ButtonGroup,CardImage,Col,CommunityCards,ConnectedPlayers,DropdownButton,Grid,Input,Jumbotron,Label,ListGroup,ListGroupItem,MainState,MenuItem,Nav,NavItem,Navbar,PageHeader,Panel,Players,Row,Table,WaitingForPlayers,displayText,table;DropdownButton=ReactBootstrap.DropdownButton,ListGroupItem=ReactBootstrap.ListGroupItem,ButtonGroup=ReactBootstrap.ButtonGroup,PageHeader=ReactBootstrap.PageHeader,Jumbotron=ReactBootstrap.Jumbotron,ListGroup=ReactBootstrap.ListGroup,MenuItem=ReactBootstrap.MenuItem,NavItem=ReactBootstrap.NavItem,Button=ReactBootstrap.Button,Navbar=ReactBootstrap.Navbar,Input=ReactBootstrap.Input,Table=ReactBootstrap.Table,Label=ReactBootstrap.Label,Panel=ReactBootstrap.Panel,Grid=ReactBootstrap.Grid,Row=ReactBootstrap.Row,Col=ReactBootstrap.Col,Nav=ReactBootstrap.Nav,CardImage=React.createClass({render:function(){return React.createElement("object",{data:this.props.card?"/images/"+("H"===this.props.card[1]?"Hearts":"S"===this.props.card[1]?"Spades":"C"===this.props.card[1]?"Clubs":"D"===this.props.card[1]?"Diamonds":void 0)+"/"+this.props.card+".svg":"/images/card_outline.svg",type:"image/svg+xml",width:"100px",className:this.props.className})}}),CommunityCards=React.createClass({render:function(){return React.createElement("ul",{className:"list-inline"},React.createElement("li",null,React.createElement(CardImage,{card:this.props.cards.flop[0]})),React.createElement("li",null,React.createElement(CardImage,{card:this.props.cards.flop[1]})),React.createElement("li",null,React.createElement(CardImage,{card:this.props.cards.flop[2]})),React.createElement("li",null,React.createElement(CardImage,{card:this.props.cards.turn})),React.createElement("li",null,React.createElement(CardImage,{card:this.props.cards.river})))}}),ConnectedPlayers=React.createClass({render:function(){return React.createElement(Panel,{header:"Connected players"},React.createElement(Table,{striped:!0,bordered:!0,condensed:!0},React.createElement("thead",null,React.createElement("tr",null,React.createElement("th",null,"ID"),React.createElement("th",null,"name"))),this.props.players.map(function(a){return React.createElement("tr",null,React.createElement("td",null,a.id),React.createElement("td",null,a.name))})))}}),Players=React.createClass({render:function(){var a,b,c,d,e,f,g,h,i,j,k,l;for(j=Math.PI/this.props.players,a=j/2,g=200,e=window.innerWidth/2,i=[],h=this.props.players,b=0,d=h.length;d>b;b++)f=h[b],c=g*Math.cos(a)+e+"px",l=g*Math.sin(a)+"px",k="left="+c+";top="+l+";",a+=j,i.push(React.createElement("span",{className:"semicircle",style:k},f.name));return console.log(i[0]),React.createElement("div",null,i)}}),WaitingForPlayers=React.createClass({handleMessage:function(a,b,c){return"start"===c.action?(window.messageBus.broadcast(JSON.stringify({status:"start",data:c.data})),table.setState("main",{})):void 0},getInitialState:function(){return{players:[]}},render:function(){return React.createElement("div",null,React.createElement(Grid,{id:"game-grid"},React.createElement(Row,{id:"row-game-main",className:"row-centered"},React.createElement(Col,{xs:8,md:8,lg:6},React.createElement("h3",null,"Waiting for players to join...")),React.createElement(Col,{xs:3,md:3,lg:3,xsoffset:2,mdoffset:3,lgoffset:4},React.createElement(ConnectedPlayers,{players:this.state.players})))))}}),MainState=React.createClass({handleMessage:function(){return{}},generateSortedDeck:function(){var a,b,c,d,e,f,g;for(g=["H","D","S","C"],b=["2","3","4","5","6","7","8","9","10","J","Q","K","A"],e=[],c=0,d=g.length;d>c;c++)f=g[c],e.push(function(){var c,d,e;for(e=[],c=0,d=b.length;d>c;c++)a=b[c],e.push(f+a);return e}());return e},shuffle:function(a){var b,c,d;for(b=a.length;b>0;)c=Math.floor(Math.random()*b),b--,d=a[b],a[b]=a[c],a[c]=d;return a},getInitialState:function(){return{community:"preflop",communityCards:{flop:["AH","4D","8H"],turn:null,river:null},players:table.players,dealer:table.players[Math.floor(Math.random()*table.players.length)],deck:this.shuffle(this.generateSortedDeck()),hand:1}},render:function(){return React.createElement("div",{className:"vertical-center"},React.createElement(Panel,{header:"Community Cards",className:"panel-transparent"},React.createElement(CommunityCards,{cards:this.state.communityCards})),React.createElement(Players,{players:this.state.players}))}}),table={state:null,prevState:null,container:null,players:[],state_data:null,host:null,states:{init:WaitingForPlayers,main:MainState},handleMessage:function(a,b){var c,d;switch(d=function(c){var d,e,f;for(d=0,e=c.length;e>d;d++)if(f=c[d],f.name===b.data.name&&f.id.split(":")[0]===a.split(":")[0])return console.log("Reconnecting user "+f.name),!0;return!1},b.action){case"join":if("init"===this.state){console.log("join>init");try{return d(this.players)?(console.log("join>init>reconn"),this.host===b.data.name&&(console.log("join>init>reconn>host"),window.messageBus.send(a,JSON.stringify({status:"host",data:{}})),console.log("join>init>reconn>host>done"))):(console.log("join>init>new"),0===this.players.length&&(console.log("First person joined: "+b.data.name),this.host=b.data.name,window.messageBus.send(a,JSON.stringify({status:"host",data:{}}))),this.players.push({name:b.data.name,id:a}),console.log(this.players),this.container.setState({players:this.players})),console.log("join>init>done")}catch(e){return c=e,console.error(c)}}else{if("main"!==this.state)return console.error("Cannot join once game has begun!");if(d(this.players))return window.messageBus.send(a,JSON.stringify({status:"start",data:{}}))}break;default:return this.container.handleMessage(this,a,b)}},setState:function(a,b){return this.state===a&&null!==this.container?(displayText("Updating state: "+b),this.container.setProps(b)):(displayText("Setting state to: "+a),this.prevState=this.state,this.state=a,this.container=React.render(React.createElement(this.states[a],b),document.getElementById("content")))}},window.onload=function(){return cast.receiver.logger.setLevelValue(0),window.castReceiverManager=cast.receiver.CastReceiverManager.getInstance(),"undefined"!=typeof console&&(console.olog="undefined"!=typeof console.log?console.log:function(){return{}}),console.log=function(a){return console.olog(a),displayText(a)},console.error=console.debug=console.info=console.log,console.log("Starting Receiver Manager"),table.setState("init",{}),castReceiverManager.onReady=function(a){return console.log("Received Ready event: "+JSON.stringify(a.data)),window.castReceiverManager.setApplicationState("Application status is ready...")},castReceiverManager.onSenderConnected=function(a){return console.log("Received Sender Connected event: "+a.data),console.log(window.castReceiverManager.getSender(a.datxa).userAgent)},castReceiverManager.onSenderDisconnected=function(a){return console.log("Received Sender Disconnected event: "+a.data),0===window.castReceiverManager.getSenders().length?window.close():void 0},castReceiverManager.onSystemVolumeChanged=function(a){return console.log("Received System Volume Changed event: "+a.data.level+" "+a.data.muted)},window.messageBus=window.castReceiverManager.getCastMessageBus("urn:x-cast:sadikov.apps.pokair"),window.messageBus.onMessage=function(a){return console.log("Message ["+a.senderId+"]: "+a.data),table.handleMessage(a.senderId,JSON.parse(a.data))},window.castReceiverManager.start({statusText:"Application is starting"}),console.log("Receiver Manager started")},displayText=function(a){var b;return b=document.getElementById("message"),b.innerHTML+="\n"+a,b.scrollTop=b.scrollHeight};