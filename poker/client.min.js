var Button,ButtonGroup,CardImage,Col,DropdownButton,GameNavigation,Grid,Hand,InitializingState,Input,JoinedState,Jumbotron,Label,ListGroup,ListGroupItem,MainState,MenuItem,Nav,NavItem,Navbar,PageHeader,Panel,PlayerOverview,Pot,Row,Turn,UsernameInput,WagerActions,WaitingForPlayersState,appendMessage,applicationID,client,initializeCastApi,namespace,onError,onInitSuccess,onStopAppSuccess,onSuccess,receiverListener,receiverMessage,sendMessage,session,sessionListener,sessionUpdateListener,stopApp,transcribe;DropdownButton=ReactBootstrap.DropdownButton,ListGroupItem=ReactBootstrap.ListGroupItem,ButtonGroup=ReactBootstrap.ButtonGroup,PageHeader=ReactBootstrap.PageHeader,Jumbotron=ReactBootstrap.Jumbotron,ListGroup=ReactBootstrap.ListGroup,MenuItem=ReactBootstrap.MenuItem,NavItem=ReactBootstrap.NavItem,Button=ReactBootstrap.Button,Navbar=ReactBootstrap.Navbar,Input=ReactBootstrap.Input,Label=ReactBootstrap.Label,Panel=ReactBootstrap.Panel,Grid=ReactBootstrap.Grid,Row=ReactBootstrap.Row,Col=ReactBootstrap.Col,Nav=ReactBootstrap.Nav,CardImage=React.createClass({render:function(){return React.createElement("object",{data:"/images/"+("H"===this.props.card[1]?"Hearts":"S"===this.props.card[1]?"Spades":"C"===this.props.card[1]?"Clubs":"D"===this.props.card[1]?"Diamonds":void 0)+"/"+this.props.card+".svg",type:"image/svg+xml",className:this.props.className})}}),Hand=React.createClass({render:function(){return React.createElement("div",{id:"card-container"},this.props.hand.map(function(a,b){return React.createElement("div",{id:"card-"+(0===b?"left":"right")},React.createElement(CardImage,{card:a}))}))}}),WagerActions=React.createClass({render:function(){return React.createElement(ButtonGroup,{className:"btn-group-vertical"},React.createElement(Button,{bsStyle:"primary",bsSize:"large"},"Call"),React.createElement(DropdownButton,{bsStyle:"warning",bsSize:"large",title:"Raise..."},React.createElement(MenuItem,{eventKey:"1"},"$5"),React.createElement(MenuItem,{eventKey:"2"},"$10"),React.createElement(MenuItem,{eventKey:"3"},"$25"),React.createElement(MenuItem,{eventKey:"4"},"$50"),React.createElement(MenuItem,{divider:!0}),React.createElement(MenuItem,{eventKey:"4"},"Enter")),React.createElement(Button,{bsStyle:"danger",bsSize:"large"},"Fold"),React.createElement(Button,{bsStyle:"default",bsSize:"large"},"Show/Hide Cards"))}}),Pot=React.createClass({render:function(){return React.createElement("div",{className:"pot"},React.createElement("h3",null,"Pot: ",React.createElement(Label,null,"$",this.props.amount)))}}),Turn=React.createClass({render:function(){return React.createElement("div",{className:"turn-indicator"},React.createElement("h3",null,"Turn: ",React.createElement(Label,{bsStyle:"success"},"Mine")))}}),GameNavigation=React.createClass({handleSelect:function(a){return 2===a&&client.setState("help",{}),"help"===client.state&&2!==a?client.setState(client.prevState):void 0},render:function(){return React.createElement(Navbar,{className:"navbar"},React.createElement(Nav,{onSelect:this.handleSelect},React.createElement(NavItem,{href:"#",eventkey:1},"Texas Holdem"),React.createElement(NavItem,{href:"../poker/help.html",eventKey:2},"Help")))}}),UsernameInput=React.createClass({getInitialState:function(){var a;return a=localStorage.username,null===a?{value:""}:{value:a}},handleChange:function(){return this.setState({value:this.refs.uname_input.getValue()})},onSubmit:function(){return sendMessage("Connected: "+this.state.value),localStorage.username=this.state.value,client.setState("main",{remaining:1e3,hand:["AH","2S"]})},render:function(){return React.createElement(Panel,{header:"Enter username"},React.createElement(Input,{type:"text",value:this.state.value,placeholder:this.state.value,ref:"uname_input",onChange:this.handleChange}),React.createElement(Button,{bsStyle:"primary",bsSize:"large",onClick:this.onSubmit},"Join Table"))}}),PlayerOverview=React.createClass({render:function(){return React.createElement(Panel,{header:"Connected players"},React.createElement(ListGroup,null,this.props.players.map(function(a){return React.createElement(ListGroupItem,{key:a},a)})))}}),InitializingState=React.createClass({render:function(){return React.createElement("div",null,React.createElement(GameNavigation,null),React.createElement(Grid,null,React.createElement(Row,null,React.createElement(Col,{xs:6,md:6,lg:6,xsoffset:4,mdoffset:4,lgoffset:4},React.createElement("h3",null," Please connect to the chromecast "),React.createElement("p",null,React.createElement(Button,{bsStyle:"primary",bsSize:"large"},"Connect via the ",React.createElement("img",{src:"/images/casticon.on.png",id:"casticon",width:"30"})," button in your toolbar"))))))}}),JoinedState=React.createClass({render:function(){return React.createElement("div",null,React.createElement(GameNavigation,null),React.createElement(Grid,null,React.createElement(Row,null,React.createElement(Col,{xs:4,md:4,lg:4,xsoffset:8,mdoffset:8,lgoffset:8},React.createElement(UsernameInput,null)),React.createElement(Col,{xs:4,md:4,lg:4},React.createElement(PlayerOverview,{players:this.props.players})))))}}),WaitingForPlayersState=React.createClass({render:function(){return React.createElement("div",null,React.createElement(GameNavigation,null),React.createElement(Grid,null,React.createElement(Row,null,React.createElement(Col,{xs:4,md:4,lg:4,xsoffset:8,mdoffset:8,lgoffset:8},React.createElement("h3",null,"Waiting for additional players or for the host to start the game!")))))}}),MainState=React.createClass({render:function(){return React.createElement("div",null,React.createElement(GameNavigation,null),React.createElement(Grid,{id:"game-grid"},React.createElement(Row,{id:"row-game-main",className:"row-centered"},React.createElement(Col,{xs:8,md:8,lg:6},this.props.hand?React.createElement(Hand,{hand:this.props.hand}):null),React.createElement(Col,{xs:3,md:3,lg:3,xsoffset:2,mdoffset:3,lgoffset:4},React.createElement(Row,null,React.createElement(Turn,null),React.createElement("h3",null,"Remaining ",React.createElement(Label,null,"$",this.props.remaining)),React.createElement(WagerActions,null))))))}}),client={state:null,prevState:null,container:null,state_data:null,states:{main:MainState,joined:JoinedState,waiting:WaitingForPlayersState,initializing:InitializingState},handleMessage:function(a){return this.setState(a.state,a.state_data)},setState:function(a,b){return this.state===a&&null!==this.container?(console.log("Updating state: "+b),this.container.setProps(b)):(this.prevState=this.state,this.state=a,this.container=React.render(React.createElement(this.states[a],b),document.getElementById("content")))}},applicationID="409AB6BB",namespace="urn:x-cast:sadikov.apps.pokair",session=null,initializeCastApi=function(){var a,b;return b=new chrome.cast.SessionRequest(applicationID),a=new chrome.cast.ApiConfig(b,sessionListener,receiverListener),chrome.cast.initialize(a,onInitSuccess,onError)},onInitSuccess=function(){return appendMessage("onInitSuccess"),client.setState("initializing",{})},onError=function(a){return appendMessage("onError: "+JSON.stringify(a))},onSuccess=function(a){return appendMessage("onSuccess: "+a)},onStopAppSuccess=function(){return appendMessage("onStopAppSuccess")},sessionListener=function(a){return appendMessage("New session ID:"+a.sessionId),a.sessionId,session=a,session.addUpdateListener(sessionUpdateListener),session.addMessageListener(namespace,receiverMessage),client.setState("joined",{players:["nan"]})},sessionUpdateListener=function(a){var b;return b=a?"Session Updated":"Session Removed",b+=": "+session.sessionId,appendMessage(b),a?void 0:(session=null,client.setState("initializing"))},receiverMessage=function(a,b){return appendMessage("receiverMessage: "+a+", "+b),client.handleMessage(b)},receiverListener=function(a){return appendMessage("available"===a?"receiver found":"receiver list empty")},stopApp=function(){return session.stop(onStopAppSuccess,onError)},sendMessage=function(a){return null!==session?session.sendMessage(namespace,a,onSuccess.bind(this,"Message sent: "+a),onError):(onSuccess=function(b){return session=b,session.sendMessage(namespace,a,onSuccess.bind(this,"Message sent: "+a),onError)},chrome.cast.requestSession(onSuccess,onError))},appendMessage=function(a){var b,c;return c=new Date,a=c.getHours()+":"+c.getMinutes()+":"+c.getSeconds()+"  "+a,console.log(a),b=document.getElementById("debugmessage"),b.innerHTML+="\n"+JSON.stringify(a)},transcribe=function(a){return sendMessage(a)},chrome.cast&&chrome.cast.isAvailable||setTimeout(initializeCastApi,1e3);